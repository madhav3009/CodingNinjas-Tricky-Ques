Input Format :
Line 1 : Two integers, m and n
Next m lines : n integers of each row (separated by space)
Output Format :
Minimum cost
Constraints :
1 <= m, n <= 20
Sample Input 1 :
3 4
3 4 1 2
2 1 8 9
4 7 8 1
Sample Output 1 :
13

#include <iostream>
#include <cmath>
using namespace std;

int minCostPath(int **input, int m, int n) {
   
    int **ans = new int*[m];
    for(int i=0;i<m;i++)
    ans[i]=new int[n];
    
    ans[m-1][n-1]=input[m-1][n-1];
    
    
    //Last Row
    
    for(int i=n-2;i>=0;i--)
    {
        ans[m-1][i]=input[m-1][i]+ans[m-1][i+1];
    }
    
    //Last Col
    
    for(int j=m-2;j>=0;j--)
        
    {
       ans[j][n-1]=input[j][n-1]+ans[j+1][n-1];
    }
    
    
    // remaining elements
    
    for(int i=m-2;i>=0;i--)
    {
        for(int j=n-2;j>=0;j--)
        {
            ans[i][j]=input[i][j]+ min(ans[i+1][j+1],min(ans[i][j+1],ans[i+1][j]));
        }
    }
    
    return ans[0][0];
    
    
}
