onnecting Dots
Send Feedback
Gary has a board of size NxM. Each cell in the board is a coloured dot. There exist only 26 colours denoted by uppercase Latin characters (i.e. A,B,...,Z). Now Gary is getting bore and wants to play a game. The key of this game is to find a cycle that contain dots of same colour. Formally, we call a sequence of dots d1, d2, ..., dk a cycle if and only if it meets the following condition:
1. These k dots are different: if i ≠ j then di is different from dj.
2. k is at least 4.
3. All dots belong to the same colour.
4. For all 1 ≤ i ≤ k - 1: di and di + 1 are adjacent. Also, dk and d1 should also be adjacent. Cells x and y are called adjacent if they share an edge.
Since Gary is colour blind, he wants your help. Your task is to determine if there exists a cycle on the board.
Assume input to be 0-indexed based.
Input Format :
Line 1 : Two integers N and M, the number of rows and columns of the board
Next N lines : a string consisting of M characters, expressing colors of dots in each line. Each character is an uppercase Latin letter.
Output Format :
Return 1 if there is a cycle else return 0
Constraints :
2 ≤ N, M ≤ 50
Sample Input :
3 4
AAAA
ABCA
AAAA
Sample Output :
1

int l=0;
void solve1(char b[][MAXN],int n, int m,int i,int j,char c,int t,int** d)
{ 
    if (i<0||i>=n||j<0||j>=m) return ;
    
     if (b[i][j]!=c) return ;
    
    if (d[i][j]!=0) { if (d[i][j]-t+1>=4) l++; return ;    }
 if (l>0) return ;
    t++;
   d[i][j]=t;
   solve1(b,n,m,i+1,j,c,t,d);
    solve1(b,n,m,i,j+1,c,t,d);
    solve1(b,n,m,i-1,j,c,t,d);
    solve1(b,n,m,i,j-1,c,t,d);
}


int solve(char b[][MAXN],int n, int m)
{ 
   int **d=new int*[n];
    for (int i=0;i<n;i++) 
    { d[i]=new int[m];
       for (int j=0;j<m;j++) 
           d[i][j]=0;
      }
    
 	for (int i=0;i<n;i++)
        
    { 
        for (int j=0;j<m&&l==0;j++) 
        {
            if (d[i][j]==0) 
            solve1(b,n,m,i,j,b[i][j],0,d);
           
            if (l>0) break;
        }
    }
  if (l>0) return 1; else return 0;
}
