Sample Input :
8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1
12
Sample Output
2 10
5 7

#include<vector>

// Following is the Binary Tree node structure
/**************
class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
};
***************/

void convertBTtoArr(BinaryTreeNode<int> *root , vector<int> &output)
{
 if(root==NULL)
     return;
    
    convertBTtoArr(root->left,output);
    output.push_back(root->data);
    convertBTtoArr(root->right,output);
    
    
}


void printNodesSumToS(BinaryTreeNode<int> *root, int sum) {

    vector<int> output;
    convertBTtoArr(root,output);
    
    int i=0,j=output.size()-1;
    
    while(i<j)
    {
        
        if(output[i]+output[j]==sum)
        {
            cout<<output[i]<<" "<<output[j]<<endl;
            i++;
            j--;
        }
        
        else if(output[i]+output[j]>sum)
        {
            j--;
        }
        else
        {
            i++;
        }
        
        
    }
    
    
    
}
